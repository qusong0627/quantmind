services:
  # Nginx反向代理
  nginx:
    image: nginx:1.24-alpine
    container_name: quantmind-nginx
    restart: unless-stopped
    ports:
      - "${NGINX_PORT:-80}:80"
      - "${NGINX_SSL_PORT:-443}:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ${HOME}/quantmind/ssl:/etc/nginx/ssl:ro
      - ${HOME}/quantmind/logs/nginx:/var/log/nginx
    depends_on:
      - frontend
      - api-gateway
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # 前端服务
  frontend:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile.prod
    container_name: quantmind-frontend
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - REACT_APP_API_URL=${PROTOCOL:-https}://${DOMAIN}/api
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # API网关
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
    container_name: quantmind-api-gateway
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - JWT_SECRET=${JWT_SECRET}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LOG_LEVEL=info
    volumes:
      - ${HOME}/quantmind/logs/api-gateway:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # AI策略服务
  ai-strategy:
    build:
      context: ./backend/ai-strategy
      dockerfile: Dockerfile
    container_name: quantmind-ai-strategy
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LOG_LEVEL=info
    volumes:
      - ${HOME}/quantmind/logs/ai-strategy:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # 回测引擎
  backtest:
    build:
      context: ./backend/backtest
      dockerfile: Dockerfile
    container_name: quantmind-backtest
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - LOG_LEVEL=info
    volumes:
      - ${HOME}/quantmind/logs/backtest:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # 数据管理服务
  data-management:
    build:
      context: ./backend/data-management
      dockerfile: Dockerfile
    container_name: quantmind-data-management
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - LOG_LEVEL=info
    volumes:
      - ${HOME}/quantmind/logs/data-management:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # 用户服务
  user:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
    container_name: quantmind-user
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false
      - JWT_SECRET=${JWT_SECRET}
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LOG_LEVEL=info
    volumes:
      - ${HOME}/quantmind/logs/user:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 30s
      timeout: 15s
      retries: 5
      start_period: 180s

  # 市场数据服务
  market-data:
    build:
      context: ./backend/market_data
      dockerfile: Dockerfile
    container_name: quantmind-market-data
    restart: unless-stopped
    environment:
      - ENVIRONMENT=production
      - DEBUG=false

      - JUHE_API_KEY=${JUHE_API_KEY}
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=${INFLUXDB_ADMIN_PASSWORD}
      - INFLUXDB_ORG=${INFLUXDB_ORG}
      - INFLUXDB_BUCKET=${INFLUXDB_BUCKET}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_PASSWORD=${REDIS_PASSWORD}
      - LOG_LEVEL=info
    volumes:
      - ${HOME}/quantmind/logs/market-data:/app/logs
    depends_on:
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: quantmind-mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_ROOT_HOST=%
    volumes:
      - ${HOME}/quantmind/data/mysql:/var/lib/mysql
      - ${HOME}/quantmind/logs/mysql:/var/log/mysql
      - ./backend/shared/database/init:/docker-entrypoint-initdb.d:ro
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --innodb-log-file-size=64M
      --max-connections=100
      --query-cache-size=0
      --query-cache-type=0
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
      --log-error=/var/log/mysql/error.log
      --general-log=0
      --innodb-flush-log-at-trx-commit=2
      --innodb-flush-method=O_DIRECT
      --skip-name-resolve
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 30s
      timeout: 15s
      retries: 10
      start_period: 120s

  # Redis缓存
  redis:
    image: redis:6.2-alpine
    container_name: quantmind-redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD} --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - ${HOME}/quantmind/data/redis:/data
      - ${HOME}/quantmind/logs/redis:/var/log/redis
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "redis-cli", "-a", "${REDIS_PASSWORD}", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # InfluxDB时序数据库
  influxdb:
    image: influxdb:2.0
    container_name: quantmind-influxdb
    restart: unless-stopped
    environment:
      - DOCKER_INFLUXDB_INIT_MODE=setup
      - DOCKER_INFLUXDB_INIT_USERNAME=${INFLUXDB_ADMIN_USER}
      - DOCKER_INFLUXDB_INIT_PASSWORD=${INFLUXDB_ADMIN_PASSWORD}
      - DOCKER_INFLUXDB_INIT_ORG=${INFLUXDB_ORG}
      - DOCKER_INFLUXDB_INIT_BUCKET=${INFLUXDB_BUCKET}
      - DOCKER_INFLUXDB_INIT_ADMIN_TOKEN=${INFLUXDB_ADMIN_PASSWORD}
    volumes:
      - ${HOME}/quantmind/data/influxdb:/var/lib/influxdb2
      - ${HOME}/quantmind/logs/influxdb:/var/log/influxdb
    networks:
      - quantmind-network
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "5"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

networks:
  quantmind-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  influxdb_data:
    driver: local