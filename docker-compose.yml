services:
  # 基础镜像构建
  python-base:
    build:
      context: ./docker/base
      dockerfile: Dockerfile.python
    image: quantmind/python-base:latest
    container_name: quantmind-python-base

  # MySQL数据库
  mysql:
    image: mysql:8.0
    container_name: quantmind-mysql
    environment:
      MYSQL_ROOT_PASSWORD: quantmind123
      MYSQL_DATABASE: quantmind
      MYSQL_USER: quantmind
      MYSQL_PASSWORD: quantmind123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./data/mysql/init:/docker-entrypoint-initdb.d
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis缓存
  redis:
    image: redis:6.2-alpine
    container_name: quantmind-redis
    command: redis-server --requirepass quantmind123
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5

  # InfluxDB时序数据库
  influxdb:
    image: influxdb:2.0
    container_name: quantmind-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: admin
      DOCKER_INFLUXDB_INIT_PASSWORD: quantmind123
      DOCKER_INFLUXDB_INIT_ORG: quantmind
      DOCKER_INFLUXDB_INIT_BUCKET: market_data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: admin-token
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8086/health"]
      timeout: 10s
      retries: 5

  # API网关
  api-gateway:
    build:
      context: ./backend/api-gateway
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: quantmind/python-base:latest
    container_name: quantmind-gateway
    ports:
      - "8000:8000"
    environment:
      - SERVICE_NAME=api-gateway
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=mysql://quantmind:quantmind123@mysql:3306/quantmind
      - REDIS_URL=redis://:quantmind123@redis:6379
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      python-base:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # AI策略服务
  ai-strategy:
    build:
      context: ./backend/ai-strategy
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: quantmind/python-base:latest
    container_name: quantmind-ai-strategy
    ports:
      - "8003:8003"
    environment:
      - SERVICE_NAME=ai-strategy
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=mysql://quantmind:quantmind123@mysql:3306/quantmind
      - REDIS_URL=redis://:quantmind123@redis:6379
      - QWEN_API_KEY=${QWEN_API_KEY:-}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
    depends_on:
      python-base:
        condition: service_completed_successfully
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8003/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # 回测服务
  backtest:
    build:
      context: ./backend/backtest
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: quantmind/python-base:latest
    container_name: quantmind-backtest
    ports:
      - "8002:8002"
    environment:
      - SERVICE_NAME=backtest
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=mysql://quantmind:quantmind123@mysql:3306/quantmind
      - REDIS_URL=redis://:quantmind123@redis:6379
      - INFLUXDB_URL=http://influxdb:8086
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8002/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # 数据管理服务
  data-management:
    build:
      context: ./backend/data-management
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: quantmind/python-base:latest
    container_name: quantmind-data-management
    ports:
      - "8008:8008"
    environment:
      - SERVICE_NAME=data-management
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=mysql://quantmind:quantmind123@mysql:3306/quantmind
      - REDIS_URL=redis://:quantmind123@redis:6379
      - INFLUXDB_URL=http://influxdb:8086
      - INFLUXDB_TOKEN=admin-token
      - INFLUXDB_ORG=quantmind
      - INFLUXDB_BUCKET=stock_data
    volumes:
      - ./data/uploads:/app/data/uploads
      - ./logs:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8008/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # 用户服务
  user-service:
    build:
      context: ./backend/user
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: quantmind/python-base:latest
    container_name: quantmind-user
    ports:
      - "8001:8001"
    environment:
      - SERVICE_NAME=user-service
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=mysql://quantmind:quantmind123@mysql:3306/quantmind
      - REDIS_URL=redis://:quantmind123@redis:6379
      - JWT_SECRET_KEY=${JWT_SECRET_KEY:-quantmind-secret-key}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # 数据服务
  data-service:
    build:
      context: ./backend/data-service
      dockerfile: Dockerfile
      args:
        BASE_IMAGE: quantmind/python-base:latest
    container_name: quantmind-data-service
    ports:
      - "8005:8005"
    environment:
      - SERVICE_NAME=data-service
      - SERVICE_VERSION=1.0.0
      - DATABASE_URL=mysql://quantmind:quantmind123@mysql:3306/quantmind
      - REDIS_URL=redis://:quantmind123@redis:6379
      - IFIND_REFRESH_TOKEN=${IFIND_REFRESH_TOKEN:-}
    depends_on:
      mysql:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8005/health"]
      timeout: 10s
      retries: 3
      start_period: 30s

  # 前端Web应用
  web-frontend:
    build:
      context: ./frontend/web
      dockerfile: Dockerfile
    container_name: quantmind-web
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_API_URL=http://localhost:8000
    depends_on:
      - api-gateway
    networks:
      - quantmind-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  mysql_data:
  redis_data:
  influxdb_data:

networks:
  quantmind-network:
    driver: bridge